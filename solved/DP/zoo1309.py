"""
동물원

문제
어떤 동물원에 가로로 두칸 세로로 N칸인 아래와 같은 우리가 있다.


이 동물원에는 사자들이 살고 있는데 사자들을 우리에 가둘 때, 가로로도 세로로도 붙어 있게 배치할 수는 없다. 이 동물원 조련사는 사자들의 배치 문제 때문에 골머리를 앓고 있다.

동물원 조련사의 머리가 아프지 않도록 우리가 2*N 배열에 사자를 배치하는 경우의 수가 몇 가지인지를 알아내는 프로그램을 작성해 주도록 하자. 사자를 한 마리도 배치하지 않는 경우도 하나의 경우의 수로 친다고 가정한다.

입력
첫째 줄에 우리의 크기 N(1≤N≤100,000)이 주어진다.

출력
첫째 줄에 사자를 배치하는 경우의 수를 9901로 나눈 나머지를 출력하여라.

예제 입력 1 
4
예제 출력 1 
41
출처
문제의 오타를 찾은 사람: joon8409
문제를 만든 사람: xhark
"""

##1. dp로 사자가 없는 경우, 왼쪽에 있는 경우, 오른쪽에 있는 경우를 나눠 생각함.
import sys
input = sys.stdin.readline

def main():
    N = int(input().rstrip('\n'))
# for N in range(1, 10):
    dp = [[0, 0, 0] for _ in range(N+1)]
    dp[1] = [1, 1, 1]

    for i in range(2, N+1):
        dp[i][0] = (dp[i-1][0] + dp[i-1][1] + dp[i-1][2])%9901 # 사자 안넣는 경우.
        dp[i][1] = (dp[i-1][0] + dp[i-1][2])%9901 # 사자 왼쪽에 넣는 경우. 
        dp[i][2] = (dp[i-1][0] + dp[i-1][1])%9901 # 사자 오른쪽에 넣는 경우.
        # 사자를 왼쪽에 넣는 경우와 오른쪽에 넣는 경우도 같음.        

        print(dp[i])

    print(sum(dp[N])%9901)


if __name__ =='__main__':
    main()


#2. 다른 규칙이 있는 듯..
import sys

n = int(sys.stdin.readline())
dp = [0] * (n+1)
dp[0] = 1
dp[1] = 3

for i in range(2, n+1):
    dp[i] = (2 * dp[i-1] + dp[i-2]) % 9901

print(dp[n])
    

##3. 어차피 바로 전 상태에만 영향을 받으니 list를 최소로 둘 수도 있음.
N = int(input())

dp = [1,1]

for i in range(1, N):
    dp[0] = dp[0] + 2 * dp[1]
    dp[1] = dp[0] - dp[1]
    print(dp)

print((dp[0] + 2 * dp[1]) % 9901)